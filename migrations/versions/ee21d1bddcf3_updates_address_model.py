"""Updates Address model

Revision ID: ee21d1bddcf3
Revises: 17e1e07ba649
Create Date: 2025-02-08 23:52:29.922651

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'ee21d1bddcf3'
down_revision = '17e1e07ba649'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('addresses', schema=None) as batch_op:
        batch_op.add_column(sa.Column('street', sa.String(), nullable=False))
        batch_op.add_column(sa.Column('latitude', sa.Float(), nullable=True))
        batch_op.add_column(sa.Column('longitude', sa.Float(), nullable=True))
        batch_op.drop_column('road')

    with op.batch_alter_table('orders', schema=None) as batch_op:
        batch_op.drop_constraint('orders_user_id_fkey', type_='foreignkey')
        batch_op.create_foreign_key(None, 'users', ['user_id'], ['id'])

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('orders', schema=None) as batch_op:
        # Change this line to include the actual constraint name
        batch_op.drop_constraint('orders_user_id_fkey', type_='foreignkey')
        batch_op.create_foreign_key('orders_user_id_fkey', 'users', ['user_id'], ['id'], ondelete='CASCADE')

    with op.batch_alter_table('addresses', schema=None) as batch_op:
        batch_op.add_column(sa.Column('road', sa.VARCHAR(), autoincrement=False, nullable=False))
        batch_op.drop_column('longitude')
        batch_op.drop_column('latitude')
        batch_op.drop_column('street')

    # ### end Alembic commands ###
